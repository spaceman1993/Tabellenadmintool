body {
	height: 100%;
	min-width: 800px;
	padding:20px;
  	font: 14px "Lucida Grande", Helvetica, Arial, sans-serif;
}

#areaMap, #addressMap
  {
    height: 85%;
    width: 100%;
  }

.h2 {
	padding:0px;
	margin:0px;
}

.panel {
	 	height : 99%;
        margin-bottom:0;
        position: relative;
}

.panel .panel-footer {
    position: absolute;
    left: 0;
    right: 0;
    bottom: 0;

}

.panel-default > .panel-heading-nostyle {
	background: none; 
	margin: 10px;
	margin-bottom: 0px;
}

.panel-default > .panel-heading {
	margin-bottom: 0px;
}

.panel-body {
	position: absolute;
  	bottom: 38px;
  	right: 0px;
  	left: 0px;
  	overflow-y: auto;
}

.panel-body > div {

}

.center-div {
  	position: absolute;
  	top: 20%;
  	left: 50%;
  	transform: translateY(-50%);
  	transform: translateX(-50%);
}

.sidebar-Design {
	position: absolute;
	top: 0px;
  	bottom: 0px;
	left: 0px;
  	width: 200px;
}

.data-Design {
	position: absolute;
	top: 0px;
  	bottom: 0px;
  	left: 200px;
  	right: 0px;
  	padding: 10px;
  	padding-left: 20px;
  	overflow-y: auto;
}

.modifyInputText input[type="text"] {
   height: 5px;
   font-size: 5px;
   line-height: 5px;
}

.red {
    color: red;
}

.green {
    color: green;
}

.default-cursor {
	cursor: default;
}

.hand-cursor {
	cursor: pointer;
}

a {
  color: #00B7FF;
}

.highlight {
	background-color:green;
}

.selected {
    background-color: lightblue;
}

.btn-group:hover>.dropdown-menu {
  	display: block;
  	margin-top: 0;
 	cursor: pointer;
}

.dropdown-menu { width: 100%; }

.dropdown-menu:target {
	width:50%;
}

.btn-lg {
	border-radius: 0px;
}

.table > caption {
	margin-top: 0px;
	padding-top: 0px;
	font-size: 30px;
	color: #333333;
}

.borderless > tbody > tr > td {
    border-top-style: none;
    border-bottom-style: none;
}

.input-group-addon.success {
    color: rgb(255, 255, 255);
    background-color: rgb(92, 184, 92);
    border-color: rgb(76, 174, 76);
}

h2 {
	display: inline-block;
	margin: 0px;
	margin-bottom: 10px;
	color: #333333;
}

alertText {
	color: #FF0000;
	font-size: 18px;
}

meldungText {
	color: #009900;
	font-size: 18px;
}

.space {  
	margin-left: 10px;
}

.vcenter {
    display: inline-block;
    vertical-align: middle;
    float: none;
}

.pull-center {
     float: none;
     margin-left: auto;
     margin-right: auto;
}

.bigSizeGlyph {
	font-size: 1.7em;
}

span.glyphicon-circle-arrow-left {
    font-size: 1.7em;
}

::-webkit-scrollbar-track
{
	-webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);
	background-color: #F5F5F5;
	border-radius: 10px;
}

::-webkit-scrollbar
{
	width: 10px;
	background-color: #F5F5F5;
}

::-webkit-scrollbar-thumb
{
	border-radius: 10px;
	background-image: -webkit-gradient(linear,
									   left bottom,
									   left top,
									   color-stop(0.44, rgb(122,153,217)),
									   color-stop(0.72, rgb(73,125,189)),
									   color-stop(0.86, rgb(28,58,148)));
}


/* enable absolute positioning */
.inner-addon { 
    position: relative; 
}

/* style icon */
.inner-addon .glyphicon {
  position: absolute;
  padding: 10px;
  pointer-events: none;
}

/* align icon */
.left-addon .glyphicon  { left:  0px;}
.right-addon .glyphicon { right: 0px;}

/* add padding  */
.left-addon input  { padding-left:  30px; }
.right-addon input { padding-right: 30px; }




.animate.ng-enter, 
.animate.ng-leave
{ 
	-webkit-transition: 500ms cubic-bezier(0.250, 0.250, 0.750, 0.750) all;
	-moz-transition: 500ms cubic-bezier(0.250, 0.250, 0.750, 0.750) all;
	-ms-transition: 500ms cubic-bezier(0.250, 0.250, 0.750, 0.750) all;
	-o-transition: 500ms cubic-bezier(0.250, 0.250, 0.750, 0.750) all;
	transition: 500ms cubic-bezier(0.250, 0.250, 0.750, 0.750) all;
	position: relative;
	display: block;
	overflow: hidden;
	text-overflow: clip;
	white-space:nowrap;
} 

.animate.ng-leave.animate.ng-leave-active,
.animate.ng-enter {
	opacity: 0;
	width: 0px;
	height: 0px;
}

.animate.ng-enter.ng-enter-active, 
.animate.ng-leave {
	opacity: 1;
	width: 150px;
	height: 30px;
}
	
.ng-modal-overlay {
  /* A dark translucent div that covers the whole screen */
  position:absolute;
  z-index:9999;
  top:0;
  left:0;
  width:100%;
  height:100%;
  background-color:#000000;
  opacity: 0.8;
}
.ng-modal-dialog {
  /* A centered div above the overlay with a box shadow. */
  z-index:10000;
  position: absolute;
  width: 50%; /* Default */

  /* Center the dialog */
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  -webkit-transform: translate(-50%, -50%);
  -moz-transform: translate(-50%, -50%);

  background-color: #fff;
  box-shadow: 4px 4px 80px #000;
}
.ng-modal-dialog-content {
  padding:25px;
  text-align: left;
}
.ng-modal-close {
  position: absolute;
  top: 3px;
  right: 5px;
  padding: 5px;
  cursor: pointer;
  font-size: 120%;
  display: inline-block;
  font-weight: bold;
  font-family: 'arial', 'sans-serif';
}	

.sticky-note-background {
	background: url(/images/bg_corkboard.jpg) top left repeat fixed;
	height: 100%;
}

.sticky-note {
	position: absolute;
	background: url(/images/sticky-note3.png);
	padding: 30px 10px 10px 10px;
	width: 120px;
	height: 90px;
	cursor: pointer;
	z-index: 0;
}

.sticky-note .img {
	background: transparent;
	border: none;
	display: block;
	font-size: 10px;
	font-weight: bold;
}

.sticky-note .title {
	background: transparent;
	border: none;
	display: block;
	font-size: 15px;
	#font-weight: bold;
}

.sticky-note .body {
	background: transparent;
	border: none;
	display: block;
	font-size: 12px;
}

.rotate {

	/* Safari */
	-webkit-transform: rotate(-7deg);
	
	/* Firefox */
	-moz-transform: rotate(-7deg);
	
	/* IE */
	-ms-transform: rotate(-7deg);
	
	/* Opera */
	-o-transform: rotate(-7deg);
	
}

.nopadding {
	padding: 0 !important;
	margin: 0 !important;
}

.glyphicon { cursor:pointer }